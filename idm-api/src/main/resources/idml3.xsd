<?xml version="1.0" encoding="UTF-8"?>
<xs:schema 
  xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0"
  xmlns:idml="http://www.openforis.org/idml/3.0"
  targetNamespace="http://www.openforis.org/idml/3.0"
  xmlns="http://www.openforis.org/idml/3.0">
  <xs:annotation>
    <xs:documentation xml:lang="en">
      Inventory Data Modeling Language 3.0
            
      The IDML provides a standard way of defining data models for inventory primary data.  
      
      The IDML represents a meta-model for describing inventory data models.  It provides an abstraction which enables the creation of software that is both flexible and reuseable in a wider range of scenarios.  It allows tools to interoperate on the same data, regardless of platform or implementation.  For example, mobile or personal data recorder (PDR) software, web or desktop-based data management software and data modeling tools that understand IDML would all be able work together and exchange data, regardless of vendor or inventory-specific details or functionality.
      
      A model written in IDML is called an inventory data model (IDM).  An inventory data model formally defines the variables recorded during an inventory, as well as metadata needed for transparent, consistent interpretation of collected data.  This includes definition of each entity and attribute and their respective data quality checks, precision, units, code lists and spatial reference systems.  Names and documentation for each of these elements may be specified in any number of languages.  These may then be used to generate standard reports for use in field manuals, online reporting and/or software help systems, for example.  This documentation is also essential for proper interpretation of primary data and results calculation.
      
      Other features include versioning, which allow data models to evolve over time in a managed way.  New elements may be added and old ones deprecated, however operations which would compromise data integraty and comparability are inherently prohibited.  This also facilitates creation of easy-to-use tools for data and database management.  Custom expressions are represented in the W3C standard XPath language.  String patterns may also be specified using standard POSIX-like regular expressions.  
            
      Â© Copyright 2012 Food and Agriculture Organization of the United Nations
            
      G. Miceli, M. Togna, A. Pekkarinen, S. Ricci
    </xs:documentation>
   </xs:annotation>
  
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>

  <!-- Simple Types -->
  
  <xs:simpleType name="versionName">
    <xs:annotation>
      <xs:documentation xml:lang="en">
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="internalName"/>
  </xs:simpleType>
  
  <xs:simpleType name="regularExpression">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        In computing, a regular expression (regex) are used for describing patterns for matching text. IDM uses standard POSIX-style expressions for describing these patterns. 
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>

  <xs:simpleType name="expression">    
    <xs:annotation>
      <xs:documentation xml:lang="en">
        Expressions may contain formulas and custom logic used for data checking, relevance features, default calculation and other features which depend on the values entered at run-time.  In IDM, the W3C-standard XML Path Language (XPath) Version 1.0 is used for this purpose.  Expressions may refer one or more elements (attributes or entities) in the data hierarchy.  
        
        Several custom functions are also provided:
        
          this()   - the entity or attribute where the expression is defined
          parent() - the parent of the entity or attribute containing the expression
        
        Expressions are generally evaluated from one level above the entity or attribute where they are defined.  For example:
      </xs:documentation>
      <xs:documentation xml:lang="en">
        <entity name="tree" multiple="true">
          <number type="real" name="height"/>            
          <number type="real" name="dbh">
            <compare lte="height * 8" flag="error"/>
          </number>
        </entity>
      </xs:documentation>
      <xs:documentation xml:lang="en">
        This IDM snippet defines a tree with a numeric height and dbh, and an error check on the tree's dbh which raises an error if it not less than or equal to 8x the tree's height.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  
  <!-- Complex Types -->
  
  <xs:complexType name="codeListItem">
    <xs:sequence>
      <xs:element name="code" maxOccurs="unbounded" minOccurs="1">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:normalizedString">
              <xs:attribute name="scheme" use="optional"/>
            </xs:extension>            
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="label" maxOccurs="unbounded" minOccurs="0" type="unformattedText"/>
      <xs:element name="description" maxOccurs="unbounded" minOccurs="0" type="formattedText"/>
      <xs:element name="item" maxOccurs="unbounded" minOccurs="0" type="codeListItem"/>
    </xs:sequence>
    <xs:attribute name="qualifiable" type="xs:boolean"/>
    <xs:attribute name="since" type="versionName"/>
    <xs:attribute name="deprecated" type="versionName"/>
  </xs:complexType>
  
  
  <!-- Main Schema -->

  <xs:element name="survey">
    <xs:annotation>
      <xs:documentation xml:lang="en">
          Top level element representing an instance of an inventory project's data model.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
      	<xs:element name="name" type="internalName">
      	  <xs:annotation>
        	  <xs:documentation xml:lang="en">
        	    Internal system code name for survey (e.g. archenlandnfi1).
        	  </xs:documentation>
      	  </xs:annotation>
      	</xs:element>
        <xs:element name="project" type="unformattedText" minOccurs="1" maxOccurs="unbounded">
          <xs:annotation>
            <xs:documentation xml:lang="en">
              Name of survey project in human-readable text (e.g. Archenland NFI)
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="cycle" type="unformattedText" minOccurs="0" maxOccurs="unbounded">
          <xs:annotation>
            <xs:documentation xml:lang="en">
              Name of survey project cycle in human-readable text (e.g. 1)
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="description" type="formattedText" minOccurs="0" maxOccurs="unbounded">
          <xs:annotation>
            <xs:documentation xml:lang="en">
              Any other text describing the survey project.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="model" minOccurs="1" maxOccurs="1">
          <xs:annotation>
            <xs:documentation xml:lang="en">
              The survey data model.  Contains definitions of the variables recorded during a field survey, as well as information about versioning, code lists and units of measurement.
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <!--~~~~~~~~~~~~-->
              <!-- Versioning -->
              <!--~~~~~~~~~~~~-->
              <xs:element name="versioning" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                  <xs:documentation xml:lang="en">
                    Container element for information on data model versions.  Versioning allows certain elements of the inventory data model to be added or retired in a manner which does not break data consistency or comparability.  For example, as field forms evolve throughout the course of an inventory, versions may be added this section to document the changes made and to allow the system to reflect the changes only on relevant data.         
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="version" minOccurs="1" maxOccurs="unbounded">
                      <xs:annotation>
                        <xs:documentation xml:lang="en">
                          Describes a single version of the data model.  Generally follows the revision of the field forms or mobile computer setup. 
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="label" minOccurs="0" type="unformattedText">
                            <xs:annotation>
                              <xs:documentation xml:lang="en">
                                Human-readable name of the model version (e.g. Pilot, Main Phase, Extension)
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="description" minOccurs="0" maxOccurs="unbounded" type="formattedText">
                            <xs:annotation>
                              <xs:documentation xml:lang="en">
                                Human-readable description of the model version.              
                              </xs:documentation>
                            </xs:annotation>          
                          </xs:element>
                          <xs:element minOccurs="0" maxOccurs="1" name="date" type="xs:date">
                            <xs:annotation>
                              <xs:documentation xml:lang="en">
                                Date from data was collected using this version of the model.
                              </xs:documentation>
                            </xs:annotation>          
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="name" type="versionName" use="required">
                          <xs:annotation>
                            <xs:documentation xml:lang="en">
                              System name for this version of the data model.
                            </xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <!--~~~~~~~~-->
              <!-- Schema -->
              <!--~~~~~~~~-->
              <xs:element name="schema" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                  <xs:documentation xml:lang="en">
                    Contains the definition of the structure and contents of primary data, including types of entities studied and measurements or observations that will be made.  Quality checks to be applied during data collection and initial data processing are also defined here.
                    
                    A schema may contain one or more root entities which are considered the main unit of work for a survey. 
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="entity" type="rootEntity" minOccurs="1" maxOccurs="unbounded">
                      <xs:annotation>
                        <xs:documentation xml:lang="en">
                          
                        </xs:documentation>
                      </xs:annotation>
                      <xs:unique name="entityChildNames">
                        <xs:selector xpath="*"/>
                        <xs:field xpath="@name"/>
                      </xs:unique>    
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <!--~~~~~~~~~~~~-->
              <!-- Code Lists -->
              <!--~~~~~~~~~~~~-->
              <xs:element name="codeLists" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                  <xs:documentation xml:lang="en">
                    Defines code lists referred to by the inventory data.
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:sequence>
                    <xs:element minOccurs="1" maxOccurs="unbounded" name="list">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="label" minOccurs="0" maxOccurs="unbounded" type="unformattedText"/>
                          <xs:element name="description" minOccurs="0" maxOccurs="unbounded" type="formattedText"/>
                          <xs:element name="codingScheme" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="name" use="optional" type="internalName"/>
                              <xs:attribute name="scope" use="required">
                                <xs:simpleType>
                                  <xs:restriction base="xs:string">
                                    <xs:enumeration value="scheme"/>
                                    <xs:enumeration value="local"/>
                                  </xs:restriction>
                                </xs:simpleType>
                              </xs:attribute>
                              <xs:attribute name="type" use="required">
                                <xs:simpleType>
                                  <xs:restriction base="xs:string">
                                    <xs:enumeration value="numeric"/>
                                    <xs:enumeration value="alphanumeric"/>
                                  </xs:restriction>
                                </xs:simpleType>
                              </xs:attribute>            
                              <xs:attribute name="since" type="versionName"/>
                              <xs:attribute name="deprecated" type="versionName"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="hierarchy" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="rank" minOccurs="1" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="label" type="unformattedText" minOccurs="0" maxOccurs="unbounded"/>
                                      <xs:element name="description" type="unformattedText" minOccurs="0" maxOccurs="unbounded"/>
                                    </xs:sequence>
                                    <xs:attribute name="name" type="internalName" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element minOccurs="0" name="items">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element minOccurs="1" maxOccurs="unbounded" name="item" type="codeListItem"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="name" type="internalName" use="required"/>
                        <xs:attribute name="lookup" type="xs:string"/> 
                        <xs:attribute name="since" type="versionName"/>
                        <xs:attribute name="deprecated" type="versionName"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <!--~~~~~~~~~~~~~~~~~~~~~~-->
              <!-- Units of Measurement -->
              <!--~~~~~~~~~~~~~~~~~~~~~~-->
              <xs:element name="units" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                  <xs:documentation xml:lang="en">
                    Describes the units of measure used by the inventory.  Units are always stored with the primary data in order to avoid misinterpretation and to facilitate conversion between units.
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="unit" minOccurs="1" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="label" minOccurs="0" maxOccurs="unbounded" type="unformattedText"/>
                          <xs:element name="abbreviation" minOccurs="0" maxOccurs="unbounded" type="unformattedText"/>
                        </xs:sequence>
                        <xs:attribute name="name" use="required" type="internalName"/>
                        <xs:attribute name="dimension" use="required" type="internalName"/>
                        <xs:attribute name="conversionFactor" use="optional" type="xs:decimal"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
        <!-- Spatial Reference Systems -->
        <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
        <xs:element name="spatialReferenceSystems" minOccurs="0" maxOccurs="1">
          <xs:annotation>
            <xs:documentation xml:lang="en">
              Defines specific coordinate reference systems and their respective map projections used by the inventory.  This information is required for correct interpretation of coordinate and for related geospatial calculations (e.g. distance). 
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="spatialReferenceSystem" minOccurs="1" maxOccurs="unbounded"> 
               <xs:annotation>
                 <xs:documentation xml:lang="en">
                   Defines a single coordinate reference system used by the system.  Note that when using Universal Transverse Mercator coordinate system (UTM), each zone is to be encoded as a separate spatial reference system.  
                 </xs:documentation>
               </xs:annotation>
               <xs:complexType>
                 <xs:sequence>
                   <xs:element name="label" maxOccurs="unbounded" minOccurs="0" type="unformattedText">
                     <xs:annotation>
                       <xs:documentation xml:lang="en">
                         Human-readable name of the spatial reference system (e.g. UTM Zone 38).
                       </xs:documentation>
                     </xs:annotation>
                   </xs:element>
                   <xs:element name="description" minOccurs="0" maxOccurs="unbounded" type="formattedText">
                     <xs:annotation>
                       <xs:documentation xml:lang="en">
                         Human-readable description of the spatial reference system.
                       </xs:documentation>
                     </xs:annotation>
                   </xs:element>
                   <xs:element name="wkt" minOccurs="1" maxOccurs="1" type="xs:string">
                     <xs:annotation>
                       <xs:documentation xml:lang="en">
                         Definition of the spatial reference system's parameters and projection in well-known text (WKT) format.  WKT is a standard defined in the Open Geospatial Consortium (OGC)'s Simple Feature Access and Coordinate Transformation Service specifications.
                       </xs:documentation>
                     </xs:annotation>
                   </xs:element>
                 </xs:sequence>
                 <xs:attribute name="srid" type="xs:string">
                   <xs:annotation>
                     <xs:documentation xml:lang="en">
                       User-defined unique ID of the spatial reference system (e.g. EPSG:21036)  
                     </xs:documentation>
                   </xs:annotation>
                 </xs:attribute>
               </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="configuration" minOccurs="0" maxOccurs="1">
          <xs:annotation>
            <xs:documentation xml:lang="en">
              Any other configuration for use by software tools in XML or plain text format.
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
        		<xs:sequence>
			        <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        		</xs:sequence>
        	</xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element> 
  
  <xs:complexType name="schemaObject"> 
    <xs:sequence>
      <xs:element name="label" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="unformattedText">
              <xs:attribute name="type" use="required">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:enumeration value="instance"/>
                    <xs:enumeration value="list"/>
                    <xs:enumeration value="prompt"/>
                    <xs:enumeration value="number"/>
                  </xs:restriction>
                </xs:simpleType>
              </xs:attribute>
              <xs:attribute name="since" type="versionName"/>
              <xs:anyAttribute namespace="##other" processContents="lax"/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      
      <xs:element name="description" minOccurs="0" maxOccurs="unbounded" type="formattedText">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            For of a entity, the description should include relevant details regarding size, shape and/or general meaning.
            
            For attributes, the description should briefly outline the details of how this value is obtained (e. the diameter perpendicular to the tree at 1.3m height)
            
            For identifiers, the description should describe the format and source of the unique id.
            
            For code lists, the description describes the contents of the list in more detail. 
          </xs:documentation>
        </xs:annotation>        
      </xs:element>
    </xs:sequence>
    <xs:attribute name="name" type="internalName" use="required"/>
    <xs:attribute name="since" type="versionName"/>
    <xs:attribute name="deprecated" type="versionName"/>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
    
  <xs:complexType name="entityBase">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        Defines an entity on which measurements or observations will be made.  Entities generally represent concrete objects like trees, shrubs or dead wood, or more abstract concepts such as biodiversity and plot center.  In both cases, the entity is a means of logically grouping together observations and measurements. 
      </xs:documentation>
    </xs:annotation>
      <xs:complexContent>
        <xs:extension base="schemaObject">
          <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
              <xs:element name="entity" type="innerEntity">
                <xs:unique name="innerEntityChildNames">
                  <xs:selector xpath="*"/>
                  <xs:field xpath="@name"/>
                </xs:unique>    
              </xs:element>
              <xs:element ref="number"/>
              <xs:element ref="range"/>
              <xs:element ref="boolean"/>
              <xs:element ref="date"/>
              <xs:element ref="time"/>
              <xs:element ref="file"/>
              <xs:element ref="taxon"/>
              <xs:element ref="coordinate"/>
              <xs:element ref="code"/>
              <xs:element ref="text"/>
              <xs:element ref="memo"/>
            </xs:choice>
          </xs:sequence>
        </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="rootEntity">
    <xs:complexContent>
      <xs:extension base="entityBase"/>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="innerEntity">
    <xs:complexContent>
      <xs:extension base="entityBase">
        <xs:attribute name="relevant" type="expression"/>
        <xs:attribute name="required" type="xs:string" use="optional" default="false"/>
        <xs:attribute name="multiple" type="xs:boolean" use="optional" default="false"/>
        <xs:attribute name="minCount" type="xs:nonNegativeInteger" use="optional" default="0"/>
        <xs:attribute name="maxCount" type="xs:nonNegativeInteger" use="optional" default="0"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="attribute">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        Defines an inventory attribute.  An attribute is variable for which a value will be measured or observed and recorded.   
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="schemaObject">
        <xs:sequence>
          <xs:element name="default" minOccurs="0" maxOccurs="unbounded">
            <xs:complexType>
              <xs:attribute name="expr" type="expression" use="required"/>
              <xs:attribute name="if" type="expression"/>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="relevant" type="expression"/>
        <xs:attribute name="required" type="xs:string" use="optional" default="false"/>
        <xs:attribute name="multiple" type="xs:boolean" use="optional" default="false"/>
        <xs:attribute name="minCount" type="xs:nonNegativeInteger" use="optional" default="0"/>
        <xs:attribute name="maxCount" type="xs:nonNegativeInteger" use="optional" default="0"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  
  <!-- Numeric Attributes -->
  
  <xs:complexType name="numericAttribute">
    <xs:complexContent>
      <xs:extension base="attribute">
        <xs:sequence>
          <xs:element name="precision" minOccurs="0" maxOccurs="unbounded">
            <xs:complexType>
              <xs:attribute name="unit" type="internalName"/>
              <xs:attribute name="decimalDigits" type="xs:integer"/>
              <xs:attribute name="default" type="xs:boolean"/>
            </xs:complexType>
          </xs:element>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="compare"/>
            <xs:element ref="unique"/>
            <xs:element ref="check"/>            
          </xs:choice>
        </xs:sequence>
        <xs:attribute name="key" type="xs:boolean" use="optional" default="false"/>
        <xs:attribute name="type" default="real">
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="real"/>
              <xs:enumeration value="integer"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:element name="number" type="numericAttribute"/>

  <xs:element name="range" type="numericAttribute"/>
   
  <!-- String Attributes -->

  <xs:complexType name="stringAttribute">
    <xs:complexContent>
      <xs:extension base="attribute">
        <xs:sequence>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="unique"/>
            <xs:element ref="pattern"/>
            <xs:element ref="check"/>            
          </xs:choice>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:element name="text">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="stringAttribute">
          <xs:attribute name="key" type="xs:boolean" use="optional" default="false"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="memo" type="stringAttribute"/>

  <!-- Date/time Attributes -->
  
  <xs:complexType name="timestamp">
    <xs:complexContent>
      <xs:extension base="attribute">
        <xs:sequence>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="compare"/>
            <xs:element ref="check"/>            
          </xs:choice>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:element name="date" type="timestamp"/>
  
  <xs:element name="time" type="timestamp"/>
  
  <!-- Other Attributes -->
  
  <xs:element name="code">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="attribute">
          <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
              <xs:element ref="compare">
                <xs:annotation>
                  <xs:documentation>For numeric codes (defining in coding scheme)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element ref="pattern">
                <xs:annotation>
                  <xs:documentation>For alphanumeric codes (defining in coding scheme)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element ref="unique"/>
              <xs:element ref="check"/>            
            </xs:choice>
          </xs:sequence>
          <xs:attribute name="strict" type="xs:boolean" use="optional" default="true"/>
          <xs:attribute name="list" type="internalName"/>
          <xs:attribute name="parent" type="expression"/>
          <xs:attribute name="key" type="xs:boolean" use="optional" default="false"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="coordinate">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="attribute">
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element ref="distance"/>
          </xs:choice>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="taxon">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="attribute">
          <xs:attribute name="taxonomy" type="xs:string"/>
          <xs:attribute name="highestRank" type="xs:string"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="boolean">
    <xs:annotation>
      <xs:documentation>
        
        affirmativeOnly="false":  (default)
        Measured   [ ] Yes  [x] No     true/false/null    
        
        affirmativeOnly="true":
        [ ] Measured                   true/null
        
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="attribute">
          <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
              <xs:element ref="check"/>            
            </xs:choice>
          </xs:sequence>
          <xs:attribute name="affirmativeOnly" type="xs:boolean" use="optional" default="false"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="file">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="attribute">
          <xs:attribute name="maxSize" use="required" type="xs:positiveInteger">
            <xs:annotation>
              <xs:documentation>
                Maximum file size expressed in number of bytes.
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="extensions" use="optional">
            <xs:annotation>
              <xs:documentation>
                Space-separated list of allowed file extensions.
              </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:list itemType="xs:string"/>
            </xs:simpleType>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <!--~~~~~~~~~~~~~~-->
  <!-- Value Checks -->
  <!--~~~~~~~~~~~~~~-->
  
  <xs:complexType name="checkBase">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        Checks define rules executed on primary data during data entry and data cleaning.   
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="message" type="unformattedText" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation xml:lang="en">
            Custom message to be used when a check fails.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="flag" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="error"/>
          <xs:enumeration value="warn"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="if" type="expression"/>
  </xs:complexType>
  
  <xs:element name="compare">
    <xs:annotation>
      <xs:documentation>
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
        <xs:complexContent>
          <xs:extension base="checkBase">
            <xs:attribute name="gte" type="expression"/>
            <xs:attribute name="lte" type="expression"/>
            <xs:attribute name="gt" type="expression"/>
            <xs:attribute name="lt" type="expression"/>            
            <xs:attribute name="eq" type="expression"/>            
          </xs:extension>
        </xs:complexContent>
    </xs:complexType>      
  </xs:element>
  
  <xs:element name="distance">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="checkBase">
          <xs:attribute name="min" type="expression"/>
          <xs:attribute name="max" type="expression"/>
          <xs:attribute name="from" type="expression"/>
          <xs:attribute name="to" type="expression"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="pattern">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="checkBase">
          <xs:attribute name="regex" type="regularExpression" use="required"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>  
  
  <xs:element name="check">
    <xs:annotation>
      <xs:documentation xml:lang="en">
         Asserts that the expression specified in the test attribute is true. 
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="checkBase">
          <xs:attribute name="expr" type="expression" use="required">
            <xs:annotation>
              <xs:documentation>
                Generates an error or warning when this expression evaluates to false.        
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="unique">
    <xs:annotation>
      <xs:documentation xml:lang="en">
         
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="checkBase">
          <xs:attribute name="expr" type="expression" use="required">
            <xs:annotation>
              <xs:documentation>
                Generates an error or warning when one or more values resulting nodeset are not unique          
              </xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  
  <xs:simpleType name="internalName">
    <xs:restriction base="xs:NCName">
      <xs:pattern value="[a-z][a-z0-9_]*"/>
      <xs:minLength value="1"/>
      <xs:maxLength value="40"/>
    </xs:restriction>
  </xs:simpleType>
  
  <!--~~~~~~~~~~~~~~~~~~~~~~~-->
  <!-- Natural Language Text -->
  <!--~~~~~~~~~~~~~~~~~~~~~~~-->
  
  <!--
  <xs:element name="description" type="formattedText">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        Natural-language description to be used in automatically generated documentation, as well as in software as interactive help text.  
        
        For of a level and entity, the description should include relevant details regarding size, shape and/or general meaning.
        
        For identifiers, the description should describe the format and source of the unique id.
        
        For attributes, the description should briefly outline the details of how this value is obtained (e. the diameter perpendicular to the tree at 1.3m height) 
        
        For code lists, the description describes the contents of the list in more detail. 
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  --> 
  <xs:complexType name="unformattedText">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        A single line of natural-language text, with optional language attribute.  Leading and trailing spaces are ignored.
      </xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:token">
        <xs:attribute ref="xml:lang" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="formattedText">
    <xs:annotation>
      <xs:documentation xml:lang="en">
        Natural-language text, usually descriptive, with optional language attribute.  May be used in automatically generated documentation, as well as in software as interactive help text.  
        
        Whitespace (spaces, returns, tabs, etc.) in the text is maintained.
      </xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute ref="xml:lang" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
</xs:schema>


